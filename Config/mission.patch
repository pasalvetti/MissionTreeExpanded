@use "builtin:missions";

// modifications to stock missions
:missions {
	#Main_Kerbin_03 {
        * > ContentBranches > OnSubmit {
// change unlocked mission from Main_MunOrBust_04 to MTE_Main_Mun_Flyby
            * > ActivateMissionAction {
                @if $$TargetMissionID == Main_MunOrBust_04 {
                    TargetMissionID: MTE_Main_Mun_Flyby;
                }
            }
// unlock MTE_Secondary_MTES01_Polar_Orbit
			+ActivateMissionAction {
				TargetMissionID: MTE_Secondary_MTES01_Polar_Orbit;
				MissionOwner: Agency;
			}
		}
	}

    #Main_MunOrBust_04 {
// remove KSP2Mission_Secondary_Kerbin_OrbitCircular as it now spawns from MTE_Secondary_MTES01_Polar_Orbit
        * > ContentBranches > OnSubmit > ActivateMissionAction {
			@if $$TargetMissionID == KSP2Mission_Secondary_Kerbin_OrbitCircular {
				@delete;
			}
		}
	}

// lower science reward amount (originally 100)
    #KSP2Mission_Secondary_Kerbin_OrbitCircular {
		* > missionStages > _15 > MissionReward > SciencePoints {
			RewardAmount: 50.0;
		}
    }

// add KSP2Mission_Secondary_Kerbin_Satellite as a child mission of KSP2Mission_Secondary_Kerbin_OrbitEccentric
    #KSP2Mission_Secondary_Kerbin_OrbitEccentric {
        +ActivateMissionAction {
            TargetMissionID: KSP2Mission_Secondary_Kerbin_Satellite;
            MissionOwner: Agency;
        }
    }

    #Main_Mun_OSS {
// remove KSP2Mission_Secondary_Kerbin_Satellite as it now spawns from KSP2Mission_Secondary_Kerbin_OrbitEccentric
        * > ContentBranches > OnSubmit > ActivateMissionAction {
			@if $$TargetMissionID == KSP2Mission_Secondary_Kerbin_Satellite {
				@delete;
			}
		}
    }
}

// add new missions
@new(MTE_Main_Mun_Flyby)
:missions {
    MissionGroup: "";
    name: "Missions/Primary/MTE01/Name";
    description: "Missions/Primary/MTE01/Description";
    GameModeFeatureId: ExplorationMissions;
    type: Primary;
    Owner: Agency;
    state: Inactive;
    * > missionStages {
        +_0 {
            name: Check;
            description: "";
            Objective: "Missions/Primary/MTE01/Objective";
            MissionRewardType: None;
            DisplayObjective: true;
            +ConditionSet {
                +PropertyCondition {
                    RequireCurrentValue: true;
                    PropertyTypeAQN: get-property-watcher(VesselSOIPropertyWatcher);
                    TestWatchedstring: Mun;
                    propOperator: EQUAL;
                    isInput: false;
                }
                ConditionMode: AND;
            }
        }
        +_1 {
            name: "Mission Complete";
            description: "";
            Objective: "";
            * > MissionReward {
                +SciencePoints {
                    RewardAmount: 100.0;
                }
            }
            * > actions {
                +MissionResolutionAction {
                    MissionResolution: Complete;
                    StageEvent: Play_mission_alert_primary;
                }
            }
            IgnoreExceptionBranches: true;
        }
    }
    currentStageIndex: 0;
    Hidden: false;
    MissionGranterKey: MissionGranterKSC;
    TriumphLoopVideoKey: reward_mission_tier1;
    VisibleRewards: true;
    pendingCompletionTest: false;
    maxStageID: 2;
    uiDisplayType: Default;
    * > ContentBranches {
		+Brief {
            +MissionCharacterDialogAction {
                CharacterNameLocKey: "Missions/CharacterName/Keri";
                CharacterIconKey: keri_joy;
                * > Dialogs {
                    Entries: [
                        {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Primary/MTE01/Brief01",
                            ContentAddressableKey: keri_happy,
                        }, {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Primary/MTE01/Brief02",
                            ContentAddressableKey: keri_joy,
                        }, {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Primary/MTE01/Brief03",
                            ContentAddressableKey: keri_happy,
                        }, {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Primary/MTE01/Brief04",
                            ContentAddressableKey: keri_joy,
                        }, {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Primary/MTE01/Brief05",
                            ContentAddressableKey: keri_happy,
                        }, {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Primary/MTE01/Brief06",
                            ContentAddressableKey: keri_joy,
                        },
                    ];
                }
            }
        }
		+Debrief {
            +MissionCharacterDialogAction {
                CharacterNameLocKey: "Missions/CharacterName/Keri";
                CharacterIconKey: keri_happy;
                * > Dialogs {
                    Entries: [
                        {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Primary/MTE01/Debrief01",
                            ContentAddressableKey: keri_joy,
                        },
                        {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Primary/MTE01/Debrief02",
                            ContentAddressableKey: keri_joy,
                        },
                        {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Primary/MTE01/Debrief03",
                            ContentAddressableKey: keri_joy,
                        },
                    ];
                }
                EventTypeOnClosed: get-message(SpawnTriumphWindow);
                StageEvent: Play_mission_alert_primary_returned_to_missionControl;
            }
        }
        +OnSubmit {
			+ActivateMissionAction {
				TargetMissionID: Main_MunOrBust_04;
				MissionOwner: Agency;
			}
        }
    }
    MissionSaveAssetKey: "";
}


@new(MTE_Secondary_MTES01_Polar_Orbit)
:missions {
    MissionGroup: "";
    name: "Missions/Secondary/MTES01/Name";
    description: "Missions/Secondary/MTES01/Description";
    GameModeFeatureId: ExplorationMissions;
    type: Secondary;
    Owner: Agency;
    state: Inactive;
    * > missionStages {
        +_0 {
            name: Check;
            description: "";
            Objective: "Missions/Secondary/MTES01/Objective";
            MissionRewardType: None;
            DisplayObjective: true;
            +ConditionSet {
                +PropertyCondition {
                    RequireCurrentValue: true;
                    PropertyTypeAQN: get-property-watcher(VesselSOIPropertyWatcher);
                    TestWatchedstring: Kerbin;
                    propOperator: EQUAL;
                    isInput: false;
                }
                +PropertyCondition {
                    RequireCurrentValue: true;
                    PropertyTypeAQN: get-property-watcher(VehiclePeriapsisAltitudePropertyWatcher);
                    TestWatchedValue: 70000.0;
                    propOperator: GREATER;
                    isInput: false;
                }
                +PropertyCondition {
                    RequireCurrentValue: true;
                    PropertyTypeAQN: get-property-watcher(OrbitInclination);
                    TestWatchedValue: 85;
                    propOperator: GREATER;
                    isInput: false;
                }
                +PropertyCondition {
                    RequireCurrentValue: true;
                    PropertyTypeAQN: get-property-watcher(OrbitInclination);
                    TestWatchedValue: 95;
                    propOperator: LESSER;
                    isInput: false;
                }
                ConditionMode: AND;
            }
        }
        +_1 {
            name: "Mission Complete";
            description: "";
            Objective: "";
            * > MissionReward {
                +SciencePoints {
                    RewardAmount: 30.0;
                }
            }
            * > actions {
                +MissionResolutionAction {
                    MissionResolution: Complete;
                    StageEvent: Play_mission_alert_primary;
                }
            }
            IgnoreExceptionBranches: true;
        }
    }
    currentStageIndex: 0;
    Hidden: false;
    MissionGranterKey: MissionGranterKSC;
    TriumphLoopVideoKey: reward_mission_tier1;
    VisibleRewards: true;
    pendingCompletionTest: false;
    maxStageID: 2;
    uiDisplayType: Default;
    * > ContentBranches {
		+Brief {
            +MissionCharacterDialogAction {
                CharacterNameLocKey: "Missions/CharacterName/Keri";
                CharacterIconKey: keri_neutral;
                * > Dialogs {
                    Entries: [
                        {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Secondary/MTES01/Brief01",
                            ContentAddressableKey: keri_neutral,
                        },
                        {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Secondary/MTES01/Brief02",
                            ContentAddressableKey: keri_neutral,
                        },
                        {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Secondary/MTES01/Brief03",
                            ContentAddressableKey: keri_neutral,
                        },
                        {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Secondary/MTES01/Brief04",
                            ContentAddressableKey: keri_neutral,
                        },
                        {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Secondary/MTES01/Brief05",
                            ContentAddressableKey: keri_neutral,
                        }
                    ];
                }
            }
        }
		+Debrief {
            +MissionCharacterDialogAction {
                CharacterNameLocKey: "Missions/CharacterName/Keri";
                CharacterIconKey: keri_happy;
                * > Dialogs {
                    Entries: [
                        {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Secondary/MTES01/Debrief01",
                            ContentAddressableKey: keri_joy,
                        },
                        {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Secondary/MTES01/Debrief02",
                            ContentAddressableKey: keri_joy,
                        },
                        {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Secondary/MTES01/Debrief03",
                            ContentAddressableKey: keri_joy,
                        },
                        {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Secondary/MTES01/Debrief04",
                            ContentAddressableKey: keri_joy,
                        }
                    ];
                }
                EventTypeOnClosed: get-message(SpawnTriumphWindow);
                StageEvent: Play_mission_alert_primary_returned_to_missionControl;
            }
        }
        +OnSubmit {
			+ActivateMissionAction {
				TargetMissionID: KSP2Mission_Secondary_Kerbin_OrbitCircular;
				MissionOwner: Agency;
			}
			+ActivateMissionAction {
				TargetMissionID: MTE_Secondary_MTES02_Polar_Probe;
				MissionOwner: Agency;
			}
        }
    }
    MissionSaveAssetKey: "";
}


@new(MTE_Secondary_MTES02_Polar_Probe)
:missions {
    MissionGroup: "";
    name: "Missions/Secondary/MTES02/Name";
    description: "Missions/Secondary/MTES02/Description";
    GameModeFeatureId: ExplorationMissions;
    type: Secondary;
    Owner: Agency;
    state: Inactive;
    * > missionStages {
        +_0 {
            name: Check;
            description: "";
            Objective: "Missions/Secondary/MTES02/Objective";
            MissionRewardType: None;
            DisplayObjective: true;
            +ConditionSet {
                +PropertyCondition {
                    RequireCurrentValue: true;
                    PropertyTypeAQN: get-property-watcher(VesselSOIPropertyWatcher);
                    TestWatchedstring: Kerbin;
                    propOperator: EQUAL;
                    isInput: false;
                }
                +PropertyCondition {
                    RequireCurrentValue: true;
                    PropertyTypeAQN: get-property-watcher(VehicleLatitudePropertyWatcher);
                    TestWatchedValue: 80.0;
                    propOperator: GREATER;
                    isInput: false;
                }
                +PropertyCondition {
                    RequireCurrentValue: true;
                    PropertyTypeAQN: get-property-watcher(CrewCount);
                    TestWatchedInt: 0;
                    propOperator: EQUAL;
                    isInput: false;
                }
                +EventCondition {
                    EventTypeAQN: get-message(VesselLandedGroundAtRestMessage);
                }
                ConditionMode: AND;
            }
        }
        +_1 {
            name: "Mission Complete";
            description: "";
            Objective: "";
            * > MissionReward {
                +SciencePoints {
                    RewardAmount: 50.0;
                }
            }
            * > actions {
                +MissionResolutionAction {
                    MissionResolution: Complete;
                    StageEvent: Play_mission_alert_primary;
                }
            }
            IgnoreExceptionBranches: true;
        }
    }
    currentStageIndex: 0;
    Hidden: false;
    MissionGranterKey: MissionGranterKSC;
    TriumphLoopVideoKey: reward_mission_tier1;
    VisibleRewards: true;
    pendingCompletionTest: false;
    maxStageID: 2;
    uiDisplayType: Default;
    * > ContentBranches {
		+Brief {
            +MissionCharacterDialogAction {
                CharacterNameLocKey: "Missions/CharacterName/Keri";
                CharacterIconKey: keri_neutral;
                * > Dialogs {
                    Entries: [
                        {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Secondary/MTES02/Brief01",
                            ContentAddressableKey: keri_happy,
                        },
                        {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Secondary/MTES02/Brief02",
                            ContentAddressableKey: keri_happy,
                        },
                        {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Secondary/MTES02/Brief03",
                            ContentAddressableKey: keri_happy,
                        },
                        {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Secondary/MTES02/Brief04",
                            ContentAddressableKey: keri_happy,
                        }
                    ];
                }
            }
        }
		+Debrief {
            +MissionCharacterDialogAction {
                CharacterNameLocKey: "Missions/CharacterName/Keri";
                CharacterIconKey: keri_happy;
                * > Dialogs {
                    Entries: [
                        {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Secondary/MTES02/Debrief01",
                            ContentAddressableKey: keri_joy,
                        },
                        {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Secondary/MTES02/Debrief02",
                            ContentAddressableKey: keri_joy,
                        },
                        {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Secondary/MTES02/Debrief03",
                            ContentAddressableKey: keri_joy,
                        },
                        {
                            ShowsInHistory: true,
                            DialogEntryType: Text,
                            LocKey: "Missions/Secondary/MTES02/Debrief04",
                            ContentAddressableKey: keri_joy,
                        }
                    ];
                }
                EventTypeOnClosed: get-message(SpawnTriumphWindow);
                StageEvent: Play_mission_alert_primary_returned_to_missionControl;
            }
        }
        +OnSubmit {
			+ActivateMissionAction {
				TargetMissionID: MTE_Secondary_MTES03_Polar_Flag;
				MissionOwner: Agency;
			}
        }
    }
    MissionSaveAssetKey: "";
}